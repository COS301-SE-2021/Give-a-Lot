Index: backend/src/main/java/com/GiveaLot/givealot/User/dataclass/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/GiveaLot/givealot/User/dataclass/User.java b/backend/src/main/java/com/GiveaLot/givealot/User/model/User.java
rename from backend/src/main/java/com/GiveaLot/givealot/User/dataclass/User.java
rename to backend/src/main/java/com/GiveaLot/givealot/User/model/User.java
--- a/backend/src/main/java/com/GiveaLot/givealot/User/dataclass/User.java	(revision de06c3c0f7cb494d9b2e5b11ef0e0438c785cda5)
+++ b/backend/src/main/java/com/GiveaLot/givealot/User/model/User.java	(date 1629171000641)
@@ -1,4 +1,4 @@
-package com.GiveaLot.givealot.User.dataclass;
+package com.GiveaLot.givealot.User.model;
 
 import lombok.AllArgsConstructor;
 import lombok.Builder;
Index: backend/givealot.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"FacetManager\">\r\n    <facet type=\"web\" name=\"Web\">\r\n      <configuration>\r\n        <webroots />\r\n        <sourceRoots>\r\n          <root url=\"file://$MODULE_DIR$/src/main/java\" />\r\n          <root url=\"file://$MODULE_DIR$/src/main/resources\" />\r\n        </sourceRoots>\r\n      </configuration>\r\n    </facet>\r\n    <facet type=\"jpa\" name=\"JPA\">\r\n      <configuration>\r\n        <setting name=\"validation-enabled\" value=\"true\" />\r\n        <setting name=\"provider-name\" value=\"Hibernate\" />\r\n        <datasource-mapping>\r\n          <factory-entry name=\"entityManagerFactory\" value=\"c2115be9-a582-4130-8c1d-8deddc5027b3\" />\r\n        </datasource-mapping>\r\n        <naming-strategy-map />\r\n      </configuration>\r\n    </facet>\r\n    <facet type=\"Spring\" name=\"Spring\">\r\n      <configuration />\r\n    </facet>\r\n  </component>\r\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_9\">\r\n    <output url=\"file://$MODULE_DIR$/target/classes\" />\r\n    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/java\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/resources\" type=\"java-resource\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/test/java\" isTestSource=\"true\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/${project.build.directory}/classes\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/${project.build.directory}/test-classes\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-web:2.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter:2.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-logging:2.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: ch.qos.logback:logback-classic:1.2.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: ch.qos.logback:logback-core:1.2.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.logging.log4j:log4j-to-slf4j:2.14.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.logging.log4j:log4j-api:2.14.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.slf4j:jul-to-slf4j:1.7.30\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: jakarta.annotation:jakarta.annotation-api:1.3.5\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.yaml:snakeyaml:1.28\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-json:2.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.12.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.12.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-tomcat:2.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.46\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.tomcat.embed:tomcat-embed-el:9.0.46\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.46\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-web:5.3.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-webmvc:5.3.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-expression:5.3.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.commons:commons-lang3:3.12.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.springframework.boot:spring-boot-starter-test:2.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.springframework.boot:spring-boot-test:2.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.springframework.boot:spring-boot-test-autoconfigure:2.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: com.jayway.jsonpath:json-path:2.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: net.minidev:json-smart:2.4.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: net.minidev:accessors-smart:2.4.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: jakarta.xml.bind:jakarta.xml.bind-api:2.3.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: jakarta.activation:jakarta.activation-api:1.2.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.assertj:assertj-core:3.19.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.hamcrest:hamcrest:2.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter:5.7.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: org.junit.jupiter:junit-jupiter-api:5.7.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: org.opentest4j:opentest4j:1.2.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: org.junit.platform:junit-platform-commons:1.7.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-params:5.7.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.mockito:mockito-junit-jupiter:3.9.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.skyscreamer:jsonassert:1.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: com.vaadin.external.google:android-json:0.0.20131108.vaadin1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-core:5.3.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-jcl:5.3.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.springframework:spring-test:5.3.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.xmlunit:xmlunit-core:2.8.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-security:2.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-aop:5.3.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.security:spring-security-config:5.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.security:spring-security-core:5.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.security:spring-security-web:5.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-mail:2.4.4\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.sun.mail:jakarta.mail:1.6.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.sun.activation:jakarta.activation:1.2.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: org.springframework.boot:spring-boot-devtools:2.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot:2.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-autoconfigure:2.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-context-support:5.3.9\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-beans:5.3.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-context:5.3.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: io.jsonwebtoken:jjwt:0.9.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.core:jackson-databind:2.12.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.core:jackson-annotations:2.12.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.core:jackson-core:2.12.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.data:spring-data-jpa:2.5.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.data:spring-data-commons:2.5.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-orm:5.3.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-tx:5.3.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.aspectj:aspectjrt:1.9.6\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.slf4j:slf4j-api:1.7.30\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.itextpdf:itextpdf:5.5.13.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.google.code.gson:gson:2.8.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.pdfbox:pdfbox:3.0.0-RC1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: commons-logging:commons-logging:1.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.pdfbox:fontbox:2.0.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.pdfbox:jempbox:1.8.11\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.pdfbox:xmpbox:2.0.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.pdfbox:pdfbox-tools:2.0.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.pdfbox:pdfbox-app:3.0.0-RC1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.pdfbox:pdfbox-debugger:3.0.0-RC1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: info.picocli:picocli:4.6.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.pdfbox:preflight:2.0.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.web3j:core:4.8.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.github.jnr:jnr-unixsocket:0.21\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.github.jnr:jnr-ffi:2.1.9\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.github.jnr:jffi:1.2.17\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: com.github.jnr:jffi:native:1.2.16\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.ow2.asm:asm:5.0.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.ow2.asm:asm-commons:5.0.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.ow2.asm:asm-analysis:5.0.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.ow2.asm:asm-tree:5.0.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.ow2.asm:asm-util:5.0.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.github.jnr:jnr-a64asm:1.0.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.github.jnr:jnr-x86asm:1.0.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.github.jnr:jnr-constants:0.9.11\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.github.jnr:jnr-enxio:0.19\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.github.jnr:jnr-posix:3.0.47\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: io.reactivex.rxjava2:rxjava:2.2.21\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.reactivestreams:reactive-streams:1.0.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.java-websocket:Java-WebSocket:1.3.8\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.web3j:crypto:4.8.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.web3j:rlp:4.8.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.web3j:tuples:4.8.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.web3j:utils:4.8.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.bouncycastle:bcprov-jdk15on:1.68\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.web3j:abi:4.8.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.web3j:codegen:4.8.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.squareup:kotlinpoet:1.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: org.jetbrains.kotlin:kotlin-reflect:1.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.squareup:javapoet:1.7.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: org.junit.platform:junit-platform-launcher:1.7.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: org.apiguardian:apiguardian-api:1.1.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: org.junit.platform:junit-platform-engine:1.7.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: org.junit.jupiter:junit-jupiter-engine:5.7.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: org.junit.vintage:junit-vintage-engine:5.7.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.integration:spring-integration-sftp:5.5.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.integration:spring-integration-file:5.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: commons-io:commons-io:2.8.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.tomcat:tomcat-util:7.0.22\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.jcraft:jsch:0.1.55\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-messaging:5.3.9\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.integration:spring-integration-core:5.5.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.retry:spring-retry:1.3.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: javax.annotation:javax.annotation-api:1.3.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: io.projectreactor:reactor-core:3.4.6\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: org.postgresql:postgresql:42.2.20\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: org.checkerframework:checker-qual:3.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.zaxxer:HikariCP:4.0.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-jdbc:2.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-jdbc:5.3.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.hierynomus:sshj:0.27.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.bouncycastle:bcpkix-jdk15on:1.60\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.jcraft:jzlib:1.1.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: net.i2p.crypto:eddsa:0.2.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: junit:junit:4.13.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.hamcrest:hamcrest-core:2.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.projectlombok:lombok:1.18.20\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-data-jpa:2.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-aop:2.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.aspectj:aspectjweaver:1.9.6\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: jakarta.transaction:jakarta.transaction-api:1.3.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: jakarta.persistence:jakarta.persistence-api:2.2.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.hibernate:hibernate-core:5.4.31.Final\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.jboss.logging:jboss-logging:3.4.1.Final\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.javassist:javassist:3.27.0-GA\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: antlr:antlr:2.7.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.jboss:jandex:2.2.3.Final\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml:classmate:1.5.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.dom4j:dom4j:2.1.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.hibernate.common:hibernate-commons-annotations:5.1.2.Final\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.glassfish.jaxb:jaxb-runtime:2.3.4\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.glassfish.jaxb:txw2:2.3.4\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.sun.istack:istack-commons-runtime:3.0.12\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-aspects:5.3.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.squareup.okhttp3:okhttp:4.3.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.squareup.okio:okio:2.4.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.jetbrains.kotlin:kotlin-stdlib-common:1.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.jetbrains.kotlin:kotlin-stdlib:1.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.jetbrains:annotations:13.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.squareup.okhttp3:logging-interceptor:4.3.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.mockito:mockito-core:2.21.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: net.bytebuddy:byte-buddy:1.10.22\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: net.bytebuddy:byte-buddy-agent:1.10.22\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.objenesis:objenesis:2.6\" level=\"project\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/givealot.iml b/backend/givealot.iml
--- a/backend/givealot.iml	(revision de06c3c0f7cb494d9b2e5b11ef0e0438c785cda5)
+++ b/backend/givealot.iml	(date 1629170997108)
@@ -16,8 +16,11 @@
         <setting name="provider-name" value="Hibernate" />
         <datasource-mapping>
           <factory-entry name="entityManagerFactory" value="c2115be9-a582-4130-8c1d-8deddc5027b3" />
+          <factory-entry name="givealot" />
         </datasource-mapping>
-        <naming-strategy-map />
+        <naming-strategy-map>
+          <unit-entry name="entityManagerFactory" />
+        </naming-strategy-map>
       </configuration>
     </facet>
     <facet type="Spring" name="Spring">
Index: backend/src/main/java/com/GiveaLot/givealot/Login/repository/LoginRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.GiveaLot.givealot.Login.repository;\r\n\r\nimport com.GiveaLot.givealot.User.dataclass.User;\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.data.jpa.repository.Query;\r\nimport org.springframework.stereotype.Repository;\r\n\r\n@Repository\r\npublic interface LoginRepository extends JpaRepository<User,Long> {\r\n\r\n\r\n    @Query(\"SELECT s FROM User s WHERE s.email = ?1\")\r\n    User findUserByEmail(String email);\r\n\r\n    @Query(\"SELECT s FROM Organisations s WHERE s.orgEmail = ?1\")\r\n    User findOrganisationByEmail(String email);\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/GiveaLot/givealot/Login/repository/LoginRepository.java b/backend/src/main/java/com/GiveaLot/givealot/Login/repository/LoginRepository.java
--- a/backend/src/main/java/com/GiveaLot/givealot/Login/repository/LoginRepository.java	(revision de06c3c0f7cb494d9b2e5b11ef0e0438c785cda5)
+++ b/backend/src/main/java/com/GiveaLot/givealot/Login/repository/LoginRepository.java	(date 1629171000645)
@@ -1,6 +1,6 @@
 package com.GiveaLot.givealot.Login.repository;
 
-import com.GiveaLot.givealot.User.dataclass.User;
+import com.GiveaLot.givealot.User.model.User;
 import org.springframework.data.jpa.repository.JpaRepository;
 import org.springframework.data.jpa.repository.Query;
 import org.springframework.stereotype.Repository;
Index: backend/src/main/java/com/GiveaLot/givealot/User/requests/RegisterUserRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.GiveaLot.givealot.User.requests;\r\n\r\nimport com.GiveaLot.givealot.User.dataclass.User;\r\nimport com.fasterxml.jackson.annotation.JsonProperty;\r\n\r\npublic class RegisterUserRequest {\r\n    private final String firstName;\r\n    private final String lastName;\r\n    private final String email;\r\n    private final String password;\r\n\r\n    public RegisterUserRequest(@JsonProperty String firstName,\r\n                               @JsonProperty String lastName,\r\n                               @JsonProperty String email,\r\n                               @JsonProperty String password) {\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n        this.email = email;\r\n        this.password = password;\r\n    }\r\n\r\n    public String getFirstName() {\r\n        return firstName;\r\n    }\r\n\r\n    public String getLastName() {\r\n        return lastName;\r\n    }\r\n\r\n\r\n    public String getEmail() {\r\n        return email;\r\n    }\r\n\r\n    public String getPassword() {\r\n        return password;\r\n    }\r\n\r\n    public User getUser()\r\n    {\r\n        User user = new User(getFirstName(),getLastName(),getEmail(),getPassword());\r\n        return user;\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/GiveaLot/givealot/User/requests/RegisterUserRequest.java b/backend/src/main/java/com/GiveaLot/givealot/User/requests/RegisterUserRequest.java
--- a/backend/src/main/java/com/GiveaLot/givealot/User/requests/RegisterUserRequest.java	(revision de06c3c0f7cb494d9b2e5b11ef0e0438c785cda5)
+++ b/backend/src/main/java/com/GiveaLot/givealot/User/requests/RegisterUserRequest.java	(date 1629171000632)
@@ -1,6 +1,6 @@
 package com.GiveaLot.givealot.User.requests;
 
-import com.GiveaLot.givealot.User.dataclass.User;
+import com.GiveaLot.givealot.User.model.User;
 import com.fasterxml.jackson.annotation.JsonProperty;
 
 public class RegisterUserRequest {
Index: backend/src/main/java/com/GiveaLot/givealot/Login/service/LoginServiceImp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.GiveaLot.givealot.Login.service;\r\n\r\nimport com.GiveaLot.givealot.Login.service.LoginService;\r\nimport com.GiveaLot.givealot.Login.repository.*;\r\nimport com.GiveaLot.givealot.Login.request.*;\r\nimport com.GiveaLot.givealot.Login.response.*;\r\nimport com.GiveaLot.givealot.User.dataclass.*;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\n\r\n@Service\r\npublic class LoginServiceImp implements LoginService{\r\n    @Autowired\r\n    LoginRepository loginRepository;\r\n\r\n    @Override\r\n    public LoginResponse loginGeneralUser(LoginRequest body) throws Exception{\r\n\r\n        if(body == null)\r\n        {\r\n            throw new Exception(\"please send a valid request\");\r\n        }\r\n        if(loginRepository.findUserByEmail(body.getEmail()) == null)\r\n        {\r\n            throw new Exception(\"user not found\");\r\n        }\r\n        User user = loginRepository.findUserByEmail(body.getEmail());\r\n\r\n        if(!user.getPassword().equals(body.getPassword()))\r\n        {\r\n            throw new Exception(\"user password is incorrect\");\r\n        }\r\n        return new LoginResponse(true,\"User logged in succesfully\",\"1\");\r\n    }\r\n\r\n    @Override\r\n    public LoginResponse loginOrganisation(LoginRequest body)throws Exception\r\n    {\r\n        if(body == null)\r\n        {\r\n            throw new Exception(\"please send a valid request\");\r\n        }\r\n        if(loginRepository.findOrganisationByEmail(body.getEmail()) == null)\r\n        {\r\n            throw new Exception(\"organisation not found\");\r\n\r\n        }\r\n        User user = loginRepository.findOrganisationByEmail(body.getEmail());\r\n\r\n        if(!user.getPassword().equals(body.getPassword()))\r\n        {\r\n            throw new Exception(\"user password is incorrect\");\r\n        }\r\n        return new LoginResponse(true,\"User logged in succesfully\",\"1\");\r\n    }\r\n\r\n    @Override\r\n    public LoginResponse loginAdminUser(LoginRequest body) throws Exception{\r\n\r\n        if(body == null)\r\n        {\r\n            throw new Exception(\"please send a valid request\");\r\n        }\r\n        if(loginRepository.findUserByEmail(body.getEmail()) == null)\r\n        {\r\n            throw new Exception(\"user not found\");\r\n\r\n        }\r\n        User user = loginRepository.findUserByEmail(body.getEmail());\r\n\r\n        if(!user.getAdmin())\r\n        {\r\n            throw new Exception(\"user is not an admin\");\r\n        }\r\n\r\n        if(!user.getPassword().equals(body.getPassword()))\r\n        {\r\n            throw new Exception(\"user password is incorrect\");\r\n        }\r\n        return new LoginResponse(true,\"User logged in succesfully\",\"1\");\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/GiveaLot/givealot/Login/service/LoginServiceImp.java b/backend/src/main/java/com/GiveaLot/givealot/Login/service/LoginServiceImp.java
--- a/backend/src/main/java/com/GiveaLot/givealot/Login/service/LoginServiceImp.java	(revision de06c3c0f7cb494d9b2e5b11ef0e0438c785cda5)
+++ b/backend/src/main/java/com/GiveaLot/givealot/Login/service/LoginServiceImp.java	(date 1629171000648)
@@ -1,10 +1,9 @@
 package com.GiveaLot.givealot.Login.service;
 
-import com.GiveaLot.givealot.Login.service.LoginService;
 import com.GiveaLot.givealot.Login.repository.*;
 import com.GiveaLot.givealot.Login.request.*;
 import com.GiveaLot.givealot.Login.response.*;
-import com.GiveaLot.givealot.User.dataclass.*;
+import com.GiveaLot.givealot.User.model.User;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 
Index: backend/src/main/java/com/GiveaLot/givealot/User/controller/UserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.GiveaLot.givealot.User.controller;\r\n\r\nimport com.GiveaLot.givealot.Organisation.service.response.responseJSON;\r\nimport com.GiveaLot.givealot.User.dataclass.User;\r\nimport com.GiveaLot.givealot.User.requests.*;\r\nimport com.GiveaLot.givealot.User.service.UserServiceImp;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.lang.NonNull;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport java.util.List;\r\n\r\n@RequestMapping(\"v1/user\")\r\n@CrossOrigin(\"*\")\r\n@RestController\r\npublic class UserController {\r\n\r\n    private final UserServiceImp userServiceImp;\r\n    private final responseJSON response;\r\n\r\n\r\n    @Autowired\r\n    public UserController(UserServiceImp userServiceImp,responseJSON response) {\r\n        this.userServiceImp = userServiceImp;\r\n        this.response = response;\r\n\r\n    }\r\n\r\n    @PostMapping(\"/register/user\")\r\n    public responseJSON addUser(@RequestBody @NonNull User body)\r\n    {\r\n        response.setObject(null);\r\n        try\r\n        {\r\n            if(userServiceImp.Register(new RegisterUserRequest(body.getFirstname(),body.getLastname(),body.getEmail(),body.getPassword())))\r\n            {\r\n                response.setCode(\"user_add_ok_200\");\r\n                response.setMessage(\"success\");\r\n            }\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            response.setCode(\"user_add_err_501\");\r\n            response.setMessage(\"unsuccessful \" + e.getMessage());\r\n        }\r\n        return response;\r\n    }\r\n\r\n    @PutMapping(\"/setadmin/user\")\r\n    public responseJSON setAdmin(@RequestBody @NonNull SetAdminRequest body)\r\n    {\r\n        response.setObject(null);\r\n        try\r\n        {\r\n            if(userServiceImp.SetAdmin(body))\r\n            {\r\n                response.setCode(\"add_ok_200\");\r\n                response.setMessage(\"success\");\r\n            }\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            response.setCode(\"add_bad_500\");\r\n            response.setMessage(\"unsuccessful \" + e.getMessage());\r\n        }\r\n        return response;\r\n    }\r\n\r\n    @PutMapping(\"/resetPassword/user\")\r\n    public responseJSON resetPassword(@RequestBody @NonNull ResetPasswordRequestRequest body)\r\n    {\r\n        response.setObject(null);\r\n        try\r\n        {\r\n            if(userServiceImp.ResetPasswordRequest(body))\r\n            {\r\n                response.setCode(\"add_ok_200\");\r\n                response.setMessage(\"success\");\r\n            }\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            response.setCode(\"add_bad_500\");\r\n            response.setMessage(\"unsuccessful \" + e.getMessage());\r\n        }\r\n        return response;\r\n    }\r\n\r\n    @GetMapping(\"/get/user\")\r\n    public responseJSON getUser(@RequestBody @NonNull GetUserRequest body)\r\n    {\r\n        response.setObject(null);\r\n        try\r\n        {\r\n            User res = userServiceImp.getUser(body);\r\n            if(res != null)\r\n            {\r\n                response.setCode(\"user_sel_ok_200\");\r\n                response.setMessage(\"success\");\r\n            }\r\n            response.setObject(res);\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            response.setCode(\"user_sel_bad_500\");\r\n            response.setMessage(\"unsuccessful \" + e.toString());\r\n        }\r\n        return response;\r\n    }\r\n\r\n    @GetMapping(\"/get/users\")\r\n    public responseJSON getUsers(@RequestBody @NonNull GetUsersRequest body)\r\n    {\r\n        response.setObject(null);\r\n        try\r\n        {\r\n            List<User> res = userServiceImp.GetUsers(body);\r\n            if(res != null)\r\n            {\r\n                response.setCode(\"user_sel_ok_200\");\r\n                response.setMessage(\"success\");\r\n            }\r\n            response.setObject(res);\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            response.setCode(\"user_sel_bad_500\");\r\n            response.setMessage(\"unsuccessful \" + e.toString());\r\n        }\r\n        return response;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/GiveaLot/givealot/User/controller/UserController.java b/backend/src/main/java/com/GiveaLot/givealot/User/controller/UserController.java
--- a/backend/src/main/java/com/GiveaLot/givealot/User/controller/UserController.java	(revision de06c3c0f7cb494d9b2e5b11ef0e0438c785cda5)
+++ b/backend/src/main/java/com/GiveaLot/givealot/User/controller/UserController.java	(date 1629171000651)
@@ -1,7 +1,7 @@
 package com.GiveaLot.givealot.User.controller;
 
 import com.GiveaLot.givealot.Organisation.service.response.responseJSON;
-import com.GiveaLot.givealot.User.dataclass.User;
+import com.GiveaLot.givealot.User.model.User;
 import com.GiveaLot.givealot.User.requests.*;
 import com.GiveaLot.givealot.User.service.UserServiceImp;
 import org.springframework.beans.factory.annotation.Autowired;
Index: backend/src/main/java/com/GiveaLot/givealot/User/service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.GiveaLot.givealot.User.service;\r\n\r\nimport com.GiveaLot.givealot.User.dataclass.User;\r\nimport com.GiveaLot.givealot.User.exception.UserNotAuthorisedException;\r\nimport com.GiveaLot.givealot.User.requests.*;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.List;\r\n\r\n@Service\r\npublic interface UserService {\r\n    boolean Register(RegisterUserRequest request) throws Exception;\r\n\r\n    boolean ResetPasswordRequest(ResetPasswordRequestRequest request)throws Exception;\r\n\r\n    boolean SetAdmin(SetAdminRequest request) throws Exception;\r\n\r\n    User getUser(GetUserRequest request)throws UserNotAuthorisedException,Exception;\r\n    List<User> GetUsers(GetUsersRequest request) throws UserNotAuthorisedException,Exception;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/GiveaLot/givealot/User/service/UserService.java b/backend/src/main/java/com/GiveaLot/givealot/User/service/UserService.java
--- a/backend/src/main/java/com/GiveaLot/givealot/User/service/UserService.java	(revision de06c3c0f7cb494d9b2e5b11ef0e0438c785cda5)
+++ b/backend/src/main/java/com/GiveaLot/givealot/User/service/UserService.java	(date 1629171000635)
@@ -1,6 +1,6 @@
 package com.GiveaLot.givealot.User.service;
 
-import com.GiveaLot.givealot.User.dataclass.User;
+import com.GiveaLot.givealot.User.model.User;
 import com.GiveaLot.givealot.User.exception.UserNotAuthorisedException;
 import com.GiveaLot.givealot.User.requests.*;
 import org.springframework.stereotype.Service;
Index: backend/src/main/java/com/GiveaLot/givealot/User/repository/UserRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.GiveaLot.givealot.User.repository;\r\n\r\nimport com.GiveaLot.givealot.User.dataclass.User;\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.data.jpa.repository.Modifying;\r\nimport org.springframework.data.jpa.repository.Query;\r\nimport org.springframework.stereotype.Repository;\r\n\r\nimport java.time.LocalDateTime;\r\n\r\n@Repository\r\npublic interface UserRepository extends JpaRepository<User,Long> {\r\n    ////////////////////////////////////////////////////////// SELECT //////////////////////////////////////////////////////////\r\n    @Query(\"SELECT s FROM User s WHERE s.email = ?1\")\r\n    User findUserByEmail(String email);\r\n\r\n\r\n    @Query(\"SELECT s FROM User s WHERE s.id = ?1\")\r\n    User findUserById(long user_id);\r\n\r\n    @Query(\"SELECT s FROM User s WHERE s.email = ?1 AND s.isAdmin = True\")\r\n    User isAdmin(String email);\r\n\r\n    @Query(\"SELECT s FROM User s WHERE s.id = ?1 AND s.isAdmin = True\")\r\n    User isAdmin(long user_id);\r\n\r\n\r\n\r\n    ///////////////////////////////////////////////////////// UPDATE //////////////////////////////////////////////////////////\r\n\r\n    @Modifying\r\n    @Query(\"UPDATE User u SET u.email = ?2 WHERE u.id = ?1\")\r\n    int updateEmail(long UserID, String email);\r\n\r\n    @Modifying\r\n    @Query(\"UPDATE User u SET u.lastname = ?2 WHERE u.id = ?1\")\r\n    int updateLastname(long UserID, String lastname);\r\n\r\n    @Modifying\r\n    @Query(\"UPDATE User u SET u.firstname = ?2 WHERE u.id = ?1\")\r\n    int updateFirstname(long UserID, String firstname);\r\n\r\n    @Modifying\r\n    @Query(\"UPDATE User u SET u.isAdmin = ?2 WHERE u.email = ?1\")\r\n    int updateAdmin(String UserEmail, boolean isAdmin);\r\n\r\n    @Modifying\r\n    @Query(\"UPDATE User u SET u.password = ?2 WHERE u.email = ?1\")\r\n    int updatePassword(String email, String password);\r\n\r\n    @Modifying\r\n    @Query(\"UPDATE User u SET u.activateDate = ?2 WHERE u.id = ?1\")\r\n    int setActivateDate(long UserID, LocalDateTime activateDate);\r\n\r\n\r\n    ////////////////////////////////////////////////////////// DELETE //////////////////////////////////////////////////////////\r\n\r\n    @Modifying\r\n    @Query(\"DELETE FROM User u WHERE u.email = ?1\")\r\n    int deleteByEmail(String email);\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/GiveaLot/givealot/User/repository/UserRepository.java b/backend/src/main/java/com/GiveaLot/givealot/User/repository/UserRepository.java
--- a/backend/src/main/java/com/GiveaLot/givealot/User/repository/UserRepository.java	(revision de06c3c0f7cb494d9b2e5b11ef0e0438c785cda5)
+++ b/backend/src/main/java/com/GiveaLot/givealot/User/repository/UserRepository.java	(date 1629171000654)
@@ -1,6 +1,6 @@
 package com.GiveaLot.givealot.User.repository;
 
-import com.GiveaLot.givealot.User.dataclass.User;
+import com.GiveaLot.givealot.User.model.User;
 import org.springframework.data.jpa.repository.JpaRepository;
 import org.springframework.data.jpa.repository.Modifying;
 import org.springframework.data.jpa.repository.Query;
Index: backend/src/main/java/com/GiveaLot/givealot/User/service/UserServiceImp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.GiveaLot.givealot.User.service;\r\n\r\nimport com.GiveaLot.givealot.User.dataclass.User;\r\nimport com.GiveaLot.givealot.User.exception.UserNotAuthorisedException;\r\nimport com.GiveaLot.givealot.User.repository.UserRepository;\r\nimport com.GiveaLot.givealot.User.requests.*;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.text.DateFormat;\r\nimport java.text.SimpleDateFormat;\r\nimport java.time.LocalDateTime;\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\n@Service\r\npublic class UserServiceImp implements UserService {\r\n\r\n    @Autowired\r\n    UserRepository userRepository;\r\n\r\n\r\n    @Override\r\n    public boolean Register(RegisterUserRequest request) throws Exception{\r\n        if (request == null) {\r\n            throw new Exception(\"Registration not set\");\r\n        }\r\n        if(request.getEmail()==null)\r\n        {\r\n            throw new Exception(\"Registration not set, email not valid\");\r\n        }\r\n        User userEmail = userRepository.findUserByEmail(request.getEmail());\r\n        if (userEmail != null) {\r\n            throw new  Exception(\"The email has already been taken.\");\r\n        }\r\n\r\n        if(request.getFirstName()==null)\r\n        {\r\n            throw new Exception(\"Registration not set, firstname not valid\");\r\n\r\n        }\r\n        if(request.getLastName() == null){\r\n            throw new Exception(\"Registration not set, lastname not valid\");\r\n\r\n        }\r\n        if (request.getPassword() == null)\r\n        {\r\n            throw new Exception(\"Registration not set, password not valid\");\r\n\r\n        }\r\n        User newUser = request.getUser();\r\n        newUser.setAdmin(false);\r\n\r\n        Date dateCurrent = new Date();\r\n        Date dateEx = new Date();\r\n\r\n        DateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n\r\n        String dateCreated = format.format(dateCurrent);\r\n        newUser.setActivateDate(dateCreated);\r\n\r\n        userRepository.save(newUser);\r\n        return false;\r\n    }\r\n\r\n\r\n    @Override\r\n    public boolean ResetPasswordRequest(ResetPasswordRequestRequest request) throws Exception{\r\n        if (request == null) {\r\n            throw new Exception(\"Reset not set\");\r\n        }\r\n\r\n        User currentUser = userRepository.findUserByEmail(request.getEmail());\r\n        if(currentUser == null)\r\n        {\r\n            throw new Exception(\"this user is not registered\");\r\n        }\r\n\r\n        userRepository.updatePassword(currentUser.getEmail(),request.getNewPassword());\r\n        return true;\r\n    }\r\n\r\n\r\n    @Override\r\n    public boolean SetAdmin(SetAdminRequest request) throws Exception {\r\n        if (request == null) {\r\n            throw new Exception(\"Please send a valid request object.\");\r\n        }\r\n\r\n        if(request.getAdminEmail() == null)\r\n        {\r\n            throw new Exception(\"admin email empty\");\r\n        }\r\n\r\n        User Admin = userRepository.findUserByEmail(request.getAdminEmail());\r\n\r\n        if (Admin==null) {\r\n            throw new Exception( \"The admin user trying to call setAdmin was not found.\");\r\n        }\r\n\r\n        if(!Admin.getAdmin())\r\n        {\r\n            throw new Exception( \"The current user is not an admin user\");\r\n\r\n        }\r\n\r\n        if(request.getGeneralUserEmail() == null)\r\n        {\r\n            throw new Exception(\"general user field empty\");\r\n        }\r\n        User generalUser = userRepository.findUserByEmail(request.getGeneralUserEmail());\r\n\r\n        int count = userRepository.updateAdmin(generalUser.getEmail(), true);\r\n\r\n        if (count == 0) {\r\n            throw new Exception( \"The update did not occur correctly. Please try again.\");\r\n        }\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public User getUser(GetUserRequest request) throws UserNotAuthorisedException ,Exception{\r\n\r\n        if (request == null) {\r\n            throw new Exception(\"Please send a valid request object.\");\r\n        }\r\n        if(request.getAdminUser() == null)\r\n        {\r\n            throw new Exception(\"user was not retrieved\");\r\n        }\r\n\r\n        User admin = userRepository.findUserByEmail(request.getAdminUser());\r\n        if(!admin.getAdmin())\r\n        {\r\n            throw new UserNotAuthorisedException(\"current user is not an admin\");\r\n        }\r\n\r\n        if(request.getGeneralUserEmail() == null)\r\n        {\r\n            throw new Exception(\"user not found\");\r\n        }\r\n\r\n        User returnedUser = userRepository.findUserByEmail(request.getGeneralUserEmail());\r\n\r\n        if(returnedUser == null)\r\n        {\r\n            throw new Exception(\"user does not exist\");\r\n        }\r\n\r\n        return returnedUser;\r\n    }\r\n\r\n    @Override\r\n    public List<User> GetUsers(GetUsersRequest request) throws UserNotAuthorisedException,Exception\r\n        {\r\n\r\n            if(request.getAdminUser() == null)\r\n            {\r\n                throw new Exception(\"user was not retrieved\");\r\n            }\r\n\r\n            User admin = userRepository.findUserByEmail(request.getAdminUser());\r\n            if(!admin.getAdmin())\r\n            {\r\n                throw new UserNotAuthorisedException(\"current user is not an admin\");\r\n            }\r\n\r\n            return userRepository.findAll();\r\n        }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/GiveaLot/givealot/User/service/UserServiceImp.java b/backend/src/main/java/com/GiveaLot/givealot/User/service/UserServiceImp.java
--- a/backend/src/main/java/com/GiveaLot/givealot/User/service/UserServiceImp.java	(revision de06c3c0f7cb494d9b2e5b11ef0e0438c785cda5)
+++ b/backend/src/main/java/com/GiveaLot/givealot/User/service/UserServiceImp.java	(date 1629171000638)
@@ -1,6 +1,6 @@
 package com.GiveaLot.givealot.User.service;
 
-import com.GiveaLot.givealot.User.dataclass.User;
+import com.GiveaLot.givealot.User.model.User;
 import com.GiveaLot.givealot.User.exception.UserNotAuthorisedException;
 import com.GiveaLot.givealot.User.repository.UserRepository;
 import com.GiveaLot.givealot.User.requests.*;
@@ -9,7 +9,6 @@
 
 import java.text.DateFormat;
 import java.text.SimpleDateFormat;
-import java.time.LocalDateTime;
 import java.util.Date;
 import java.util.List;
 
