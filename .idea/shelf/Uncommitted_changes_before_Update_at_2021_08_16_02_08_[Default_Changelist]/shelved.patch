Index: backend/src/main/java/com/GiveaLot/givealot/Certificate/service/CertificateServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.GiveaLot.givealot.Certificate.service;\r\n\r\nimport com.GiveaLot.givealot.Blockchain.Repository.BlockChainRepository;\r\nimport com.GiveaLot.givealot.Blockchain.dataclass.Blockchain;\r\nimport com.GiveaLot.givealot.Blockchain.service.BlockchainService;\r\nimport com.GiveaLot.givealot.Certificate.dataclass.Certificate;\r\nimport com.GiveaLot.givealot.Certificate.repository.CertificateRepository;\r\nimport com.GiveaLot.givealot.Organisation.model.OrganisationPoints;\r\nimport com.GiveaLot.givealot.Organisation.model.Organisations;\r\nimport com.GiveaLot.givealot.Organisation.model.Organisations;\r\nimport com.GiveaLot.givealot.Organisation.repository.OrganisationRepository;\r\nimport com.GiveaLot.givealot.Server.ServerAccess;\r\nimport org.apache.pdfbox.Loader;\r\nimport org.apache.pdfbox.pdmodel.PDDocument;\r\nimport org.apache.pdfbox.pdmodel.PDDocumentCatalog;\r\nimport org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm;\r\nimport org.apache.pdfbox.pdmodel.interactive.form.PDField;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\n\r\nimport javax.mail.internet.MimeMessage;\r\nimport java.io.File;\r\nimport java.text.DateFormat;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\npublic class CertificateServiceImpl implements CertificateService {\r\n\r\n    private BlockchainService blockchainService;\r\n\r\n    @Autowired\r\n    private OrganisationRepository organisationRepository;\r\n\r\n    @Autowired\r\n    private CertificateRepository certificateRepository;\r\n\r\n    @Autowired\r\n    private BlockChainRepository blockChainRepository;\r\n\r\n\r\n\r\n//    @Autowired\r\n//    CertificateServiceImpl(  BlockchainService blockchainService, OrganisationRepository organisationRepository, CertificateRepository certificateRepository)\r\n//    {\r\n//        this.blockchainService = blockchainService;\r\n//        this.organisationRepository = organisationRepository;\r\n//        this.certificateRepository = certificateRepository;\r\n//    }\r\n\r\n    @Override\r\n    public boolean addCertificate(long orgId) throws Exception {\r\n\r\n        Certificate cert= certificateRepository.selectCertificateById(orgId);\r\n\r\n        Organisations organisation = organisationRepository.selectOrganisationById(orgId);\r\n\r\n       boolean certificateCreated = createPDFDocument(cert,organisation,0);\r\n\r\n        if(!certificateCreated){\r\n            throw new Exception(\"Exception: Problem creating and storing certificate\");\r\n        }\r\n\r\n        File certificate = retrieveCertificate(orgId, organisation.getOrgName());\r\n\r\n        String[] result = blockchainService\r\n                .uploadCertificate(orgId, certificate);\r\n        String certificateHash = result[0];\r\n        String txHash = result[1];\r\n        long index = blockchainService.findCertificateIndex(orgId);\r\n\r\n        Blockchain blockchain = new Blockchain(orgId,index,0,txHash,certificateHash);\r\n\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean updateCertificate(long orgId) throws Exception {\r\n\r\n        Blockchain blockchain = blockChainRepository.selectBlockchainOrgId(orgId);\r\n        Organisations organisation = organisationRepository.selectOrganisationById(orgId);\r\n        OrganisationPoints organisationPoints = organisationPointsRepository(orgId);\r\n        Certificate cert = certificateRepository.selectCertificateById(orgId);\r\n\r\n        boolean certificateCreated = createPDFDocument(cert,organisation,cert.getPoints());\r\n\r\n        if(!certificateCreated){\r\n            throw new Exception(\"Exception: Problem creating and storing certificate\");\r\n        }\r\n\r\n        File certificate = retrieveCertificate(orgId, organisation.getOrgName());\r\n\r\n        String[] result = blockchainService\r\n                .upgradeCertificate(blockchain.getIndex(),orgId, certificate,blockchain.getLevel());\r\n\r\n        String certificateHash = result[0];\r\n        String txHash = result[1];\r\n\r\n        blockChainRepository.UpdateBlockchain(blockchain.getIndex(),blockchain.getLevel()+1,txHash,certificateHash,orgId);\r\n\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public File retrieveCertificate(long orgId, String orgName) throws Exception {\r\n        ServerAccess access = new ServerAccess();\r\n\r\n        return access.downloadCertificate(orgId,orgName);\r\n    }\r\n\r\n    @Override\r\n    public boolean createPDFDocument(Certificate cert, Organisations organisation, int points) throws Exception {\r\n        ServerAccess access = new ServerAccess();\r\n\r\n        access.downloadCertificateTemplate(points);\r\n\r\n        String templateCertificate = \"backend/src/main/resources/TempCertificate/CertificateTemplate.pdf\";\r\n        String completeCertificate = \"backend/src/main/resources/TempCertificate/CertificateComplete.pdf\";\r\n\r\n        /** Setup the pdf file **/\r\n\r\n\r\n        File template = new File(templateCertificate);\r\n\r\n        PDDocument document = Loader.loadPDF(template);\r\n        PDDocumentCatalog catalog = document.getDocumentCatalog();\r\n\r\n        PDAcroForm acroForm = catalog.getAcroForm();\r\n\r\n        /** Assign acroform fields **/\r\n\r\n\r\n        try {\r\n\r\n            if (acroForm != null) {\r\n\r\n                PDField field = (PDField) acroForm.getField(\"name\"); // Name\r\n                field.setValue(organisation.getOrgName().toUpperCase());\r\n\r\n                field = (PDField) acroForm.getField(\"slogan\"); // Slogan\r\n                field.setValue(organisation.getSlogan());\r\n\r\n\r\n                field = (PDField) acroForm.getField(\"created\"); // Date Created\r\n                field.setValue(cert.getDateCreated());\r\n\r\n                field = (PDField) acroForm.getField(\"expiry\"); // Date Expiry\r\n                field.setValue(cert.getDateExpiry());\r\n\r\n                acroForm.flatten();\r\n\r\n            }\r\n        }catch (Exception e){\r\n            throw new Exception(\"Exception: unable to create certificate\");\r\n        }\r\n\r\n        document.save(completeCertificate);\r\n        document.close();\r\n\r\n        access.uploadCertificate(organisation.getOrgId(), organisation.getOrgName());\r\n\r\n        File deletion1 = new File(templateCertificate);\r\n        File deletion2 = new File(completeCertificate);\r\n\r\n        deletion1.delete();\r\n        deletion2.delete();\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean checkRenewal() throws Exception {\r\n        List<Certificate> certificateList = certificateRepository.findAll();\r\n\r\n        Date dateCurrent = new Date();\r\n\r\n        DateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n\r\n        List<Long> id = new ArrayList<>();\r\n        List<Date> expiry = new ArrayList<>();\r\n\r\n        for (int i = 0; i < certificateList.size(); i++) {\r\n            id.add(certificateList.get(i).getOrg_id());\r\n            expiry.add(format.parse(certificateList.get(i).getDateExpiry()));\r\n        }\r\n\r\n        for (int i = 0; i < id.size(); i++) {\r\n            if(expiry.get(i)==null) {\r\n                throw new NullPointerException();\r\n            }\r\n            Date sqlDate = expiry.get(i);\r\n            boolean check = dateCurrent.after(sqlDate);\r\n            if (check) {\r\n                certificateRepository.updateAdminRenewal(id.get(i),false);\r\n                certificateRepository.updateOrgRenewal(id.get(i),false);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean setupEmailServerProperties() {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean sendEmail() throws Exception {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public MimeMessage CertificateExpiredEmail(String orgName, String orgEmail) throws Exception {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public boolean organisationRenewal(long orgId) throws Exception {\r\n        certificateRepository.updateOrgRenewal(orgId,true);\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean adminRenewal(long orgId) throws Exception {\r\n        certificateRepository.updateAdminRenewal(orgId,true);\r\n        return true;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/GiveaLot/givealot/Certificate/service/CertificateServiceImpl.java b/backend/src/main/java/com/GiveaLot/givealot/Certificate/service/CertificateServiceImpl.java
--- a/backend/src/main/java/com/GiveaLot/givealot/Certificate/service/CertificateServiceImpl.java	(revision d46795ad37b9bddff2391e525fd3e4124ecb8b3b)
+++ b/backend/src/main/java/com/GiveaLot/givealot/Certificate/service/CertificateServiceImpl.java	(date 1629072522968)
@@ -200,6 +200,7 @@
         }
         return true;
     }
+    //
 
     @Override
     public boolean setupEmailServerProperties() {
Index: backend/src/main/java/com/GiveaLot/givealot/Organisation/service/OrganisationServiceImp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.GiveaLot.givealot.Organisation.service;\r\n\r\nimport com.GiveaLot.givealot.Certificate.dataclass.Certificate;\r\nimport com.GiveaLot.givealot.Certificate.repository.CertificateRepository;\r\nimport com.GiveaLot.givealot.Certificate.service.CertificateService;\r\nimport com.GiveaLot.givealot.Organisation.model.OrganisationInfo;\r\nimport com.GiveaLot.givealot.Organisation.repository.OrganisationInfoRepository;\r\nimport com.GiveaLot.givealot.Organisation.repository.OrganisationRepository;\r\nimport com.GiveaLot.givealot.Organisation.model.Organisations;\r\nimport com.GiveaLot.givealot.Organisation.model.OrganisationPoints;\r\nimport com.GiveaLot.givealot.Organisation.requests.*;\r\nimport com.GiveaLot.givealot.Server.*;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.io.File;\r\nimport java.math.BigInteger;\r\nimport java.security.MessageDigest;\r\nimport java.security.NoSuchAlgorithmException;\r\nimport java.text.DateFormat;\r\nimport java.text.SimpleDateFormat;\r\nimport java.time.LocalDate;\r\nimport java.util.Date;\r\n\r\n\r\n@Service\r\npublic class OrganisationServiceImp implements OrganisationService {\r\n\r\n\r\n    @Autowired\r\n    private OrganisationRepository organisationRepository;\r\n\r\n    @Autowired\r\n    private OrganisationInfoRepository organisationInfoRepository;\r\n\r\n    @Autowired\r\n    private CertificateRepository certificateRepository;\r\n\r\n    @Autowired\r\n    private CertificateService certificateService;\r\n\r\n    @Override\r\n    public Organisations selectOrganisation(String orgId) throws Exception {\r\n\r\n        if (orgId == null)\r\n            throw new Exception(\"Exception: Organisation Id is null\");\r\n        else if (orgId.isEmpty() || orgId.length() > 50) {\r\n            throw new Exception(\"Exception: orgId does not satisfy the database constraints\");\r\n        }\r\n\r\n        Organisations res = organisationRepository.selectOrganisationById(Long.parseLong(orgId));\r\n        if (res != null)\r\n            return res;\r\n        else throw new Exception(\"Exception: id does not exist, check spelling\");\r\n    }\r\n\r\n    @Override\r\n    public OrganisationInfo selectOrganisationInfo(String orgId) throws Exception {\r\n        if (orgId == null)\r\n            throw new Exception(\"Exception: Organisation ID is not set\");\r\n        else if (organisationRepository.selectOrganisationById(Long.parseLong(orgId)) == null)\r\n            throw new Exception(\"Exception: Organisation ID does not exist\");\r\n\r\n        OrganisationInfo organisationInfo = organisationInfoRepository.selectOrganisationInfo(Long.parseLong(orgId));\r\n\r\n        if (organisationInfo == null) {\r\n            organisationInfo = new OrganisationInfo();\r\n            organisationInfo.setOrgId(Long.parseLong(orgId));\r\n\r\n            organisationInfoRepository.save(organisationInfo);\r\n            throw new Exception(\"Exception: system level error, organisation info did not exist, rerun \" +\r\n                    \"the contract\");\r\n        } else return organisationInfo;\r\n    }\r\n\r\n    @Override\r\n    public boolean addOrganisation(Organisations organisation) throws Exception\r\n    {\r\n        if(organisation == null)\r\n            throw new Exception(\"invalid organisation object: null\");\r\n\r\n        if(organisation.getOrgName() == null || organisation.getOrgDescription() == null||\r\n                organisation.getPassword() == null|| organisation.getOrgSector() == null ||\r\n                organisation.getOrgEmail() == null|| organisation.getContactNumber() == null||\r\n                organisation.getContactPerson() == null|| organisation.getSlogan() == null)\r\n            throw new Exception(\"invalid field provided: null\");\r\n\r\n        organisation.setDirectory(\"/home/ubuntu/Organisations/\");\r\n        organisation.setStatus(\"active\");\r\n\r\n        if(organisationRepository.selectOrganisationByEmail(organisation.getOrgEmail()) != null)\r\n            throw new Exception(\"Email already exists\");\r\n\r\n        else if (organisation.getOrgName().isEmpty() || organisation.getOrgName().length()>255)\r\n            throw new Exception(\"Exception: orgName does not satisfy the database constraints\");\r\n\r\n        else if (organisation.getOrgDescription().isEmpty() || organisation.getOrgDescription().length()>65535)\r\n            throw new Exception(\"Exception: orgDescription does not satisfy the database constraints\");\r\n\r\n        else if (organisation.getPassword().isEmpty() || organisation.getPassword().length()>255)\r\n            throw new Exception(\"Exception: password does not satisfy the database constraints\");\r\n\r\n        else if (organisation.getOrgSector().isEmpty() || organisation.getOrgSector().length()>255)\r\n            throw new Exception(\"Exception: orgSector does not satisfy the database constraints\");\r\n\r\n        else if (organisation.getStatus().isEmpty() || organisation.getStatus().length()>255)\r\n            throw new Exception(\"Exception: status does not satisfy the database constraints\");\r\n\r\n        else if (organisation.getOrgEmail().isEmpty() || organisation.getOrgEmail().length()>255)\r\n            throw new Exception(\"Exception: orgEmail does not satisfy the database constraints\");\r\n\r\n        else if (organisation.getDirectory().isEmpty() || organisation.getDirectory().length()>255)\r\n            throw new Exception(\"Exception: directory does not satisfy the database constraints\");\r\n\r\n        else if (organisation.getContactNumber().isEmpty() || organisation.getContactNumber().length()>255)\r\n            throw new Exception(\"Exception: contactNumber does not satisfy the database constraints\");\r\n\r\n        else if (organisation.getContactPerson().isEmpty() || organisation.getContactPerson().length()>255)\r\n            throw new Exception(\"Exception: contactPerson does not satisfy the database constraints\");\r\n\r\n        else if (organisation.getSlogan().isEmpty() || organisation.getSlogan().length()>255)\r\n            throw new Exception(\"Exception: orgSlogan does not satisfy the database constraints\");\r\n\r\n        /** Setup **/\r\n\r\n        ServerAccess access = new ServerAccess();\r\n        long tmp_id = organisationRepository.getOrgId(organisation.getOrgEmail());\r\n\r\n        /** Setup dates **/\r\n\r\n        java.util.Date dateCurrent = new Date();\r\n        java.util.Date dateEx = new Date();\r\n\r\n        DateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n\r\n        String dateCreated = format.format(dateCurrent);\r\n\r\n        int year = dateCurrent.getYear();\r\n        dateEx.setYear(year+1);\r\n        String dateExpiry = format.format(dateEx);\r\n\r\n        /** Salts and hashes password **/\r\n\r\n        String salt = getMd5(organisation.getOrgEmail());\r\n\r\n        String salted = getMd5(organisation.getPassword() + salt);\r\n\r\n        organisation.setPassword(salted);\r\n\r\n        /** Create tables and directory **/\r\n\r\n        Certificate certificate = new Certificate(dateCreated,dateExpiry,0);\r\n\r\n        access.createOrganisationDirectory(organisation.getOrgId(), organisation.getOrgName());\r\n        organisation.setDirectory(\"/home/ubuntu/Organisations/\" + tmp_id);\r\n\r\n        LocalDate date = LocalDate.now(); /* registration date */\r\n\r\n        organisationRepository.save(organisation);\r\n        organisationInfoRepository.save(new OrganisationInfo((long) tmp_id));\r\n        organisationPointsRepository.save(new organisationPoints((long) tmp_id));\r\n        certificateRepository.save(certificate);\r\n\r\n        certificateService.addCertificate(organisation.getOrgId());\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean suspendOrganisation(String orgId) throws Exception {\r\n\r\n        if (orgId == null)\r\n            throw new Exception(\"String object is null\");\r\n        else if (orgId.isEmpty())\r\n            throw new Exception(\"invalid id length\");\r\n        else if (organisationRepository.selectOrganisationById(Long.parseLong(orgId)) == null)\r\n            throw new Exception(\"ID doesn't exist\");\r\n        else {\r\n            if (organisationRepository.updateStatus(Long.parseLong(orgId), \"suspended\".toLowerCase()) != 1)\r\n                throw new Exception(\"status not updated\");\r\n            else return true;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean reactivateOrganisation(String orgId) throws Exception {\r\n        if (orgId == null)\r\n            throw new Exception(\"String object is null\");\r\n        else if (orgId.isEmpty())\r\n            throw new Exception(\"invalid id length\");\r\n        else if (organisationRepository.selectOrganisationById(Long.parseLong(orgId)) == null)\r\n            throw new Exception(\"ID doesn't exist\");\r\n        else {\r\n            if (organisationRepository.updateStatus(Long.parseLong(orgId), \"active\".toLowerCase()) != 1)\r\n                throw new Exception(\"status not updated\");\r\n            else return true;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean investigateOrganisation(String orgId) throws Exception {\r\n        if (orgId == null)\r\n            throw new Exception(\"String object is null\");\r\n        else if (orgId.isEmpty())\r\n            throw new Exception(\"invalid id\");\r\n        else if (organisationRepository.selectOrganisationById(Long.parseLong(orgId)) == null)\r\n            throw new Exception(\"ID doesn't exist\");\r\n        else {\r\n            if (organisationRepository.updateStatus(Long.parseLong(orgId), \"investigating\".toLowerCase()) != 1)\r\n                throw new Exception(\"status not updated\");\r\n            else return true;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean addOrgWebsite(AddOrgWebsiteRequest request) throws Exception {\r\n        if (request == null)\r\n            throw new Exception(\"Exception: request not set\");\r\n        else if (request.getOrgId() == null)\r\n            throw new Exception(\"Exception: ID not set\");\r\n        else if (request.getWebsite() == null)\r\n            throw new Exception(\"Exception: website not set\");\r\n        else if (request.getWebsite().isEmpty())\r\n            throw new Exception(\"Exception: invalid website length\");\r\n        else if (organisationRepository.selectOrganisationById(Long.parseLong(request.getOrgId())) == null)\r\n            throw new Exception(\"Exception: Organisation ID does not exist\");\r\n\r\n        if (organisationInfoRepository.addOrgWebsite(Long.parseLong(request.getOrgId()), request.getWebsite()) != 1)\r\n            throw new Exception(\"Exception: website field failed to update\");\r\n\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean removeOrgWebsite(String orgId) throws Exception {\r\n        if (orgId == null)\r\n            throw new Exception(\"Exception: Organisation ID is not set\");\r\n        else if (organisationRepository.selectOrganisationById(Long.parseLong(orgId)) == null)\r\n            throw new Exception(\"Exception: Organisation ID does not exist\");\r\n\r\n        if (organisationInfoRepository.selectOrganisationInfo(Long.parseLong(orgId)) == null) {\r\n            /*\r\n             * Because organisation already exists, set the field\r\n             * */\r\n            OrganisationInfo organisationInfo = new OrganisationInfo();\r\n            organisationInfo.setOrgId(Long.parseLong(orgId));\r\n\r\n            organisationInfoRepository.save(organisationInfo);\r\n            throw new Exception(\"Exception: system level error, organisation info did not exist, rerun \" +\r\n                    \"the contract\");\r\n        }\r\n\r\n        if (organisationInfoRepository.removeOrgWebsite(Long.parseLong(orgId)) != 1)\r\n            throw new Exception(\"Exception: website field not updated\");\r\n\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean addOrgAddress(AddOrgAddressRequest request) throws Exception {\r\n        if (request == null)\r\n            throw new Exception(\"Exception: request not set\");\r\n        else if (request.getOrgId() == null)\r\n            throw new Exception(\"Exception: ID not set\");\r\n        else if (request.getAddress() == null)\r\n            throw new Exception(\"Exception: address not set\");\r\n        else if (organisationRepository.selectOrganisationById(Long.parseLong(request.getOrgId())) == null)\r\n            throw new Exception(\"Exception: Organisation ID does not exist\");\r\n\r\n        if (organisationInfoRepository.addOrgAddress(Long.parseLong(request.getOrgId()), request.getAddress()) != 1)\r\n            throw new Exception(\"Exception: address field not updated\");\r\n\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean removeOrgAddress(String orgId) throws Exception {\r\n        if (orgId == null)\r\n            throw new Exception(\"Exception: Organisation ID is not set\");\r\n        else if (organisationRepository.selectOrganisationById(Long.parseLong(orgId)) == null)\r\n            throw new Exception(\"Exception: Organisation ID does not exist\");\r\n\r\n        if (organisationInfoRepository.selectOrganisationInfo(Long.parseLong(orgId)) == null) {\r\n            /*\r\n             * Because organisation already exists, set the field\r\n             * */\r\n            OrganisationInfo organisationInfo = new OrganisationInfo();\r\n            organisationInfo.setOrgId(Long.parseLong(orgId));\r\n\r\n            organisationInfoRepository.save(organisationInfo);\r\n            throw new Exception(\"Exception: system level error, organisation info did not exist, rerun \" +\r\n                    \"the contract\");\r\n        }\r\n\r\n        if (organisationInfoRepository.removeOrgAddress(Long.parseLong(orgId)) != 1)\r\n            throw new Exception(\"Exception: address field not updated\");\r\n\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean addOrgTaxRef(AddOrgTaxRefRequest request) throws Exception {\r\n        if (request == null)\r\n            throw new Exception(\"Exception: request not set\");\r\n        else if (request.getOrgId() == null)\r\n            throw new Exception(\"Exception: ID not set\");\r\n        else if (request.getReference() == null)\r\n            throw new Exception(\"Exception: tax reference not set\");\r\n        else if (request.getReference().isEmpty())\r\n            throw new Exception(\"Exception: tax field is empty\");\r\n        else if (request.getOrgId().isEmpty())\r\n            throw new Exception(\"Exception: org ID is empty\");\r\n        else if (organisationRepository.selectOrganisationById(Long.parseLong(request.getOrgId())) == null)\r\n            throw new Exception(\"Exception: Organisation ID does not exist\");\r\n\r\n        if (organisationInfoRepository.addOrgTaxRef(Long.parseLong(request.getOrgId()), request.getReference()) != 1)\r\n            throw new Exception(\"Exception: tax reference field not updated\");\r\n\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean removeOrgTaxRef(String orgId) throws Exception {\r\n        if (orgId == null)\r\n            throw new Exception(\"Exception: Organisation ID is not set\");\r\n        else if (orgId.isEmpty())\r\n            throw new Exception(\"Exception: ID is empty\");\r\n        else if (organisationRepository.selectOrganisationById(Long.parseLong(orgId)) == null)\r\n            throw new Exception(\"Exception: Organisation ID does not exist\");\r\n\r\n        if (organisationInfoRepository.selectOrganisationInfo(Long.parseLong(orgId)) == null) {\r\n            /*\r\n             * Because organisation already exists, set the field\r\n             * */\r\n            OrganisationInfo organisationInfo = new OrganisationInfo();\r\n            organisationInfo.setOrgId(Long.parseLong(orgId));\r\n\r\n            organisationInfoRepository.save(organisationInfo);\r\n            throw new Exception(\"Exception: system level error, organisation info did not exist, rerun \" +\r\n                    \"the contract\");\r\n        }\r\n\r\n        if (organisationInfoRepository.removeOrgTaxRef(Long.parseLong(orgId)) != 1)\r\n            throw new Exception(\"Exception: tax reference field not updated\");\r\n\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean addOrgSocials(AddSocialsRequest request) throws Exception {\r\n        if (request == null)\r\n            throw new Exception(\"Exception: request is not set\");\r\n\r\n        else if (request.getOrgId() == null)\r\n            throw new Exception(\"Exception: request id not set\");\r\n\r\n        else if (request.getType() == null)\r\n            throw new Exception(\"Exception: request type is not set\");\r\n\r\n        else if (request.getUrl().isEmpty())\r\n            throw new Exception(\"Exception: url is empty\");\r\n\r\n        else if (request.getOrgId().isEmpty())\r\n            throw new Exception(\"Exception: ID is empty\");\r\n\r\n        else if (organisationRepository.selectOrganisationById(Long.parseLong(request.getOrgId())) == null)\r\n            throw new Exception(\"Exception: request id does not exist\");\r\n\r\n        if (request.getType().trim().equalsIgnoreCase(\"twitter\")) {\r\n            if (organisationInfoRepository.addTwitter(Long.parseLong(request.getOrgId()), request.getUrl()) != 1)\r\n                throw new Exception(\"Exception: social not added\");\r\n        } else if (request.getType().trim().equalsIgnoreCase(\"instagram\")) {\r\n            if (organisationInfoRepository.addInstagram(Long.parseLong(request.getOrgId()), request.getUrl()) != 1)\r\n                throw new Exception(\"Exception: social not added\");\r\n        } else if (request.getType().trim().equalsIgnoreCase(\"facebook\")) {\r\n            if (organisationInfoRepository.addFacebook(Long.parseLong(request.getOrgId()), request.getUrl()) != 1)\r\n                throw new Exception(\"Exception: social not added\");\r\n        } else throw new Exception(\"Exception: social not identified\");\r\n\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean removeOrgSocials(String orgId, String type) throws Exception {\r\n\r\n        if (orgId == null)\r\n            throw new Exception(\"Exception: request id not set\");\r\n\r\n        else if (type == null)\r\n            throw new Exception(\"Exception: request type is not set\");\r\n\r\n        else if (type.isEmpty())\r\n            throw new Exception(\"Exception: type is empty\");\r\n\r\n        else if (orgId.isEmpty())\r\n            throw new Exception(\"Exception: ID is empty\");\r\n\r\n        else if (organisationRepository.selectOrganisationById(Long.parseLong(orgId)) == null)\r\n            throw new Exception(\"Exception: request id does not exist\");\r\n\r\n        if (type.trim().equalsIgnoreCase(\"twitter\")) {\r\n            if (organisationInfoRepository.removeTwitter(Long.parseLong(orgId)) != 1)\r\n                throw new Exception(\"Exception: social not removed\");\r\n        } else if (type.trim().equalsIgnoreCase(\"instagram\")) {\r\n            if (organisationInfoRepository.removeInstagram(Long.parseLong(orgId)) != 1)\r\n                throw new Exception(\"Exception: social not removed\");\r\n        } else if (type.trim().equalsIgnoreCase(\"facebook\")) {\r\n            if (organisationInfoRepository.removeFacebook(Long.parseLong(orgId)) != 1)\r\n                throw new Exception(\"Exception: social not removed\");\r\n        } else throw new Exception(\"Exception: social not identified\");\r\n\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean addOrgAuditDoc(File auditDoc) throws Exception {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean removeOrgAuditDoc(long orgId) throws Exception {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean addOrgAuditor(AddOrgAuditorRequest request) throws Exception {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean removeOrgAuditor(long orgId) throws Exception {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean addOrgCommittee(AddOrgCommitteeRequest request) throws Exception {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean removeOrgCommittee(long orgId) throws Exception {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean addOrgDonationInfo(AddOrgDonationInfoRequest request) throws Exception {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean removeOrgDonationInfo(long orgId) throws Exception {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean addOrgNGO(AddOrgNGORequest request) throws Exception {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean removeOrgNGO(long orgId) throws Exception {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean addOrgEstDate(AddOrgEstDateRequest request) throws Exception {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean removeOrgEstDate(String orgId) throws Exception {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean addOrgImage(AddOrgImageRequest request) throws Exception {\r\n\r\n        if (request == null)\r\n            throw new Exception(\"Exception: request is not set\");\r\n        else if (request.getOrgId() == null)\r\n            throw new Exception(\"Exception: request id not set\");\r\n        else if (request.getImage() == null)\r\n            throw new Exception(\"Exception: request img url not set\");\r\n        else if (request.getOrgId().isEmpty())\r\n            throw new Exception(\"Exception: request id is invalid\");\r\n        else if (request.getImage().isEmpty())\r\n            throw new Exception(\"Exception: request img url is invalid\");\r\n        else if (organisationRepository.selectOrganisationById(Long.parseLong(request.getOrgId())) == null)\r\n            throw new Exception(\"Exception: request id does not exist/invalid\");\r\n\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean removeOrgImage(String orgId) throws Exception {\r\n        if(orgId == null)\r\n            throw new Exception(\"Exception: AddOrganisationRequest ID is not set\");\r\n        else if(organisationRepository.selectOrganisationById(Long.parseLong(orgId)) == null)\r\n            throw new Exception(\"Exception: AddOrganisationRequest ID does not exist\");\r\n        if (orgId == null)\r\n            throw new Exception(\"Exception: Organisation ID is not set\");\r\n        else if (organisationRepository.selectOrganisationById(Long.parseLong(orgId)) == null)\r\n            throw new Exception(\"Exception: Organisation ID does not exist\");\r\n\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public OrganisationPoints selectOrganisationPoints(String orgId) throws Exception {\r\n        return null;\r\n    }\r\n\r\n\r\n    public String getMd5(String input) {\r\n        try {\r\n            MessageDigest md = MessageDigest.getInstance(\"MD5\");\r\n\r\n            byte[] messageDigest = md.digest(input.getBytes());\r\n\r\n            BigInteger no = new BigInteger(1, messageDigest);\r\n\r\n            String hashtext = no.toString(16);\r\n            while (hashtext.length() < 32) {\r\n                hashtext = \"0\" + hashtext;\r\n            }\r\n            return hashtext;\r\n        } catch (NoSuchAlgorithmException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/src/main/java/com/GiveaLot/givealot/Organisation/service/OrganisationServiceImp.java b/backend/src/main/java/com/GiveaLot/givealot/Organisation/service/OrganisationServiceImp.java
--- a/backend/src/main/java/com/GiveaLot/givealot/Organisation/service/OrganisationServiceImp.java	(revision d46795ad37b9bddff2391e525fd3e4124ecb8b3b)
+++ b/backend/src/main/java/com/GiveaLot/givealot/Organisation/service/OrganisationServiceImp.java	(date 1629072522976)
@@ -319,20 +319,19 @@
     }
 
     @Override
-    public boolean removeOrgTaxRef(String orgId) throws Exception {
-        if (orgId == null)
-            throw new Exception("Exception: Organisation ID is not set");
-        else if (orgId.isEmpty())
-            throw new Exception("Exception: ID is empty");
-        else if (organisationRepository.selectOrganisationById(Long.parseLong(orgId)) == null)
+    public boolean removeOrgTaxRef(long orgId) throws Exception {
+
+
+        if (organisationRepository.selectOrganisationById(orgId) == null)
             throw new Exception("Exception: Organisation ID does not exist");
 
-        if (organisationInfoRepository.selectOrganisationInfo(Long.parseLong(orgId)) == null) {
+        if (organisationInfoRepository.selectOrganisationInfo(orgId) == null) {
             /*
              * Because organisation already exists, set the field
              * */
             OrganisationInfo organisationInfo = new OrganisationInfo();
-            organisationInfo.setOrgId(Long.parseLong(orgId));
+            organisationInfo.setOrgId(orgId);
+            organisationInfo.setTaxReference("");
 
             organisationInfoRepository.save(organisationInfo);
             throw new Exception("Exception: system level error, organisation info did not exist, rerun " +
@@ -380,40 +379,45 @@
     }
 
     @Override
-    public boolean removeOrgSocials(String orgId, String type) throws Exception {
+    public boolean removeOrgSocials(long orgId, String type) throws Exception {
 
-        if (orgId == null)
-            throw new Exception("Exception: request id not set");
-
-        else if (type == null)
+         if (type == null)
             throw new Exception("Exception: request type is not set");
 
         else if (type.isEmpty())
             throw new Exception("Exception: type is empty");
 
-        else if (orgId.isEmpty())
-            throw new Exception("Exception: ID is empty");
-
-        else if (organisationRepository.selectOrganisationById(Long.parseLong(orgId)) == null)
+        else if (organisationRepository.selectOrganisationById(orgId) == null)
             throw new Exception("Exception: request id does not exist");
 
         if (type.trim().equalsIgnoreCase("twitter")) {
-            if (organisationInfoRepository.removeTwitter(Long.parseLong(orgId)) != 1)
+            if (organisationInfoRepository.removeTwitter(orgId) != 1)
                 throw new Exception("Exception: social not removed");
+
         } else if (type.trim().equalsIgnoreCase("instagram")) {
-            if (organisationInfoRepository.removeInstagram(Long.parseLong(orgId)) != 1)
+            if (organisationInfoRepository.removeInstagram(orgId) != 1)
                 throw new Exception("Exception: social not removed");
+
         } else if (type.trim().equalsIgnoreCase("facebook")) {
-            if (organisationInfoRepository.removeFacebook(Long.parseLong(orgId)) != 1)
+            if (organisationInfoRepository.removeFacebook(orgId) != 1)
                 throw new Exception("Exception: social not removed");
+
         } else throw new Exception("Exception: social not identified");
 
         return true;
     }
 
     @Override
-    public boolean addOrgAuditDoc(File auditDoc) throws Exception {
-        return false;
+    public boolean addOrgAuditDoc(long orgId, File auditDoc) throws Exception {
+        if (orgId null) {
+            throw new Exception("Exception: request id not set");
+        }
+        ServerAccess access = new ServerAccess();
+        String name = organisationRepository.selectOrganisationById(orgId).getOrgName();
+
+        access.uploadAuditDocument(orgId,name,auditDoc);
+
+        return true;
     }
 
     @Override
